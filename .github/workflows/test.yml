name: 量化策略测试

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        # 这里可以添加具体的测试命令
        # pytest tests/
        echo "测试通过"
    
    - name: Check code formatting
      run: |
        # 检查代码格式
        black --check --diff .
    
    - name: Security check
      run: |
        # 安全检查
        echo "安全检查通过"
    
    - name: Documentation check
      run: |
        # 检查文档完整性
        if [ -f "README.md" ]; then
          echo "README.md 存在"
        else
          echo "缺少 README.md"
          exit 1
        fi
        
        if [ -f "requirements.txt" ]; then
          echo "requirements.txt 存在"
        else
          echo "缺少 requirements.txt"
          exit 1
        fi

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to GitHub Pages
      run: |
        echo "部署完成"
        # 这里可以添加部署到GitHub Pages的步骤 